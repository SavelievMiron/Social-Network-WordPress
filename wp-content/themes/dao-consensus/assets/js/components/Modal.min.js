class Modal{constructor(t){if(this.el=t.selector.nativeElement,!(this.el instanceof Element))throw new Error(t+" is not a valid Element");this.dispatcher=new EventEmitter,this.targets={close:"close",cancel:"cancel",content:"content"},this.initModal()}initModal(){this.modalWrapper=$lp(this.el).parent(),$lp(this.el).attr("tabindex",-1).attr("role","dialog").attr("aria-modal",!0).remove(),this.content=new Transition({selector:element("modal",this.el,"content",this.targets)}),this.close=element("modal",this.el,"close",this.targets),this.cancel=element("modal",this.el,"cancel",this.targets),this.initEvents(),this.dispatcher.emit("modal:init")}initEvents(){this.initCloseButtonEvents(),this.dispatcher.emit("modal:init-events")}handleOpen(){this.modalOpened=!0,this.content.enter(),this.modalWrapper.append(this.el),$lp(this.el).attr("aria-hidden",!1),document.body.style.cssText="\n      overflow: hidden;\n      padding-right: 17px\n    ",this.dispatcher.emit("modal:open")}handleClose(){this.modalOpened=!0,this.content.exit(),this.content.dispatcher.on("transition:exit",()=>{$lp(this.el).attr("aria-hidden",!0).remove(),["overflow","padding-right"].map(t=>document.body.style.removeProperty(t))}),this.dispatcher.emit("modal:close")}initCloseButtonEvents(){this.handleClose=this.handleClose.bind(this),["click","touchend"].map(t=>{$lp(this.el).findAll("[data-lp-close]").map(e=>e.on(t,this.handleClose)),this.close.on(t,this.handleClose)}),this.cancel.nativeElement&&["click","touchend"].map(t=>this.cancel.on(t,this.handleClose))}destroyCloseButtonEvents(){["click","touchend"].map(t=>{$lp(this.el).findAll("[data-lp-close]").map(e=>e.off(t,this.handleClose)),this.close.off(t,this.handleClose)}),this.cancel.nativeElement&&["click","touchend"].map(t=>this.cancel.off(t,this.handleClose))}}